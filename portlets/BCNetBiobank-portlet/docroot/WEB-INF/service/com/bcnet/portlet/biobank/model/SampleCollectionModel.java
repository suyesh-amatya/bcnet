/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.bcnet.portlet.biobank.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the SampleCollection service. Represents a row in the &quot;samplecollection&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.bcnet.portlet.biobank.model.impl.SampleCollectionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.bcnet.portlet.biobank.model.impl.SampleCollectionImpl}.
 * </p>
 *
 * @author suyama
 * @see SampleCollection
 * @see com.bcnet.portlet.biobank.model.impl.SampleCollectionImpl
 * @see com.bcnet.portlet.biobank.model.impl.SampleCollectionModelImpl
 * @generated
 */
public interface SampleCollectionModel extends BaseModel<SampleCollection> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a sample collection model instance should use the {@link SampleCollection} interface instead.
	 */

	/**
	 * Returns the primary key of this sample collection.
	 *
	 * @return the primary key of this sample collection
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this sample collection.
	 *
	 * @param primaryKey the primary key of this sample collection
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the sample collection db ID of this sample collection.
	 *
	 * @return the sample collection db ID of this sample collection
	 */
	public long getSampleCollectionDbId();

	/**
	 * Sets the sample collection db ID of this sample collection.
	 *
	 * @param sampleCollectionDbId the sample collection db ID of this sample collection
	 */
	public void setSampleCollectionDbId(long sampleCollectionDbId);

	/**
	 * Returns the sample collection ID of this sample collection.
	 *
	 * @return the sample collection ID of this sample collection
	 */
	@AutoEscape
	public String getSampleCollectionId();

	/**
	 * Sets the sample collection ID of this sample collection.
	 *
	 * @param sampleCollectionId the sample collection ID of this sample collection
	 */
	public void setSampleCollectionId(String sampleCollectionId);

	/**
	 * Returns the acronym of this sample collection.
	 *
	 * @return the acronym of this sample collection
	 */
	@AutoEscape
	public String getAcronym();

	/**
	 * Sets the acronym of this sample collection.
	 *
	 * @param acronym the acronym of this sample collection
	 */
	public void setAcronym(String acronym);

	/**
	 * Returns the name of this sample collection.
	 *
	 * @return the name of this sample collection
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this sample collection.
	 *
	 * @param name the name of this sample collection
	 */
	public void setName(String name);

	/**
	 * Returns the description of this sample collection.
	 *
	 * @return the description of this sample collection
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this sample collection.
	 *
	 * @param description the description of this sample collection
	 */
	public void setDescription(String description);

	/**
	 * Returns the consent template of this sample collection.
	 *
	 * @return the consent template of this sample collection
	 */
	public boolean getConsentTemplate();

	/**
	 * Returns <code>true</code> if this sample collection is consent template.
	 *
	 * @return <code>true</code> if this sample collection is consent template; <code>false</code> otherwise
	 */
	public boolean isConsentTemplate();

	/**
	 * Sets whether this sample collection is consent template.
	 *
	 * @param consentTemplate the consent template of this sample collection
	 */
	public void setConsentTemplate(boolean consentTemplate);

	/**
	 * Returns the reuse of samples of this sample collection.
	 *
	 * @return the reuse of samples of this sample collection
	 */
	public boolean getReuseOfSamples();

	/**
	 * Returns <code>true</code> if this sample collection is reuse of samples.
	 *
	 * @return <code>true</code> if this sample collection is reuse of samples; <code>false</code> otherwise
	 */
	public boolean isReuseOfSamples();

	/**
	 * Sets whether this sample collection is reuse of samples.
	 *
	 * @param reuseOfSamples the reuse of samples of this sample collection
	 */
	public void setReuseOfSamples(boolean reuseOfSamples);

	/**
	 * Returns the material transfer agreement of this sample collection.
	 *
	 * @return the material transfer agreement of this sample collection
	 */
	public boolean getMaterialTransferAgreement();

	/**
	 * Returns <code>true</code> if this sample collection is material transfer agreement.
	 *
	 * @return <code>true</code> if this sample collection is material transfer agreement; <code>false</code> otherwise
	 */
	public boolean isMaterialTransferAgreement();

	/**
	 * Sets whether this sample collection is material transfer agreement.
	 *
	 * @param materialTransferAgreement the material transfer agreement of this sample collection
	 */
	public void setMaterialTransferAgreement(boolean materialTransferAgreement);

	/**
	 * Returns the accreditation of this sample collection.
	 *
	 * @return the accreditation of this sample collection
	 */
	public boolean getAccreditation();

	/**
	 * Returns <code>true</code> if this sample collection is accreditation.
	 *
	 * @return <code>true</code> if this sample collection is accreditation; <code>false</code> otherwise
	 */
	public boolean isAccreditation();

	/**
	 * Sets whether this sample collection is accreditation.
	 *
	 * @param accreditation the accreditation of this sample collection
	 */
	public void setAccreditation(boolean accreditation);

	/**
	 * Returns the quality control of this sample collection.
	 *
	 * @return the quality control of this sample collection
	 */
	public boolean getQualityControl();

	/**
	 * Returns <code>true</code> if this sample collection is quality control.
	 *
	 * @return <code>true</code> if this sample collection is quality control; <code>false</code> otherwise
	 */
	public boolean isQualityControl();

	/**
	 * Sets whether this sample collection is quality control.
	 *
	 * @param qualityControl the quality control of this sample collection
	 */
	public void setQualityControl(boolean qualityControl);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(SampleCollection sampleCollection);

	@Override
	public int hashCode();

	@Override
	public CacheModel<SampleCollection> toCacheModel();

	@Override
	public SampleCollection toEscapedModel();

	@Override
	public SampleCollection toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}