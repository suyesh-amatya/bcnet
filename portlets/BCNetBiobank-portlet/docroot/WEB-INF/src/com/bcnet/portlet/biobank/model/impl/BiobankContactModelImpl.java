/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.bcnet.portlet.biobank.model.impl;

import com.bcnet.portlet.biobank.model.BiobankContact;
import com.bcnet.portlet.biobank.model.BiobankContactModel;
import com.bcnet.portlet.biobank.model.BiobankContactSoap;
import com.bcnet.portlet.biobank.service.persistence.BiobankContactPK;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the BiobankContact service. Represents a row in the &quot;biobankcontact&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.bcnet.portlet.biobank.model.BiobankContactModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BiobankContactImpl}.
 * </p>
 *
 * @author suyama
 * @see BiobankContactImpl
 * @see com.bcnet.portlet.biobank.model.BiobankContact
 * @see com.bcnet.portlet.biobank.model.BiobankContactModel
 * @generated
 */
@JSON(strict = true)
public class BiobankContactModelImpl extends BaseModelImpl<BiobankContact>
	implements BiobankContactModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a biobank contact model instance should use the {@link com.bcnet.portlet.biobank.model.BiobankContact} interface instead.
	 */
	public static final String TABLE_NAME = "biobankcontact";
	public static final Object[][] TABLE_COLUMNS = {
			{ "biobankDbId", Types.BIGINT },
			{ "contactId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table biobankcontact (biobankDbId LONG not null,contactId LONG not null,primary key (biobankDbId, contactId))";
	public static final String TABLE_SQL_DROP = "drop table biobankcontact";
	public static final String ORDER_BY_JPQL = " ORDER BY biobankContact.id.biobankDbId ASC, biobankContact.id.contactId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY biobankcontact.biobankDbId ASC, biobankcontact.contactId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.bcnet.portlet.biobank.model.BiobankContact"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.bcnet.portlet.biobank.model.BiobankContact"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static BiobankContact toModel(BiobankContactSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		BiobankContact model = new BiobankContactImpl();

		model.setBiobankDbId(soapModel.getBiobankDbId());
		model.setContactId(soapModel.getContactId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<BiobankContact> toModels(BiobankContactSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<BiobankContact> models = new ArrayList<BiobankContact>(soapModels.length);

		for (BiobankContactSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.bcnet.portlet.biobank.model.BiobankContact"));

	public BiobankContactModelImpl() {
	}

	@Override
	public BiobankContactPK getPrimaryKey() {
		return new BiobankContactPK(_biobankDbId, _contactId);
	}

	@Override
	public void setPrimaryKey(BiobankContactPK primaryKey) {
		setBiobankDbId(primaryKey.biobankDbId);
		setContactId(primaryKey.contactId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new BiobankContactPK(_biobankDbId, _contactId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((BiobankContactPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return BiobankContact.class;
	}

	@Override
	public String getModelClassName() {
		return BiobankContact.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("biobankDbId", getBiobankDbId());
		attributes.put("contactId", getContactId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long biobankDbId = (Long)attributes.get("biobankDbId");

		if (biobankDbId != null) {
			setBiobankDbId(biobankDbId);
		}

		Long contactId = (Long)attributes.get("contactId");

		if (contactId != null) {
			setContactId(contactId);
		}
	}

	@JSON
	@Override
	public long getBiobankDbId() {
		return _biobankDbId;
	}

	@Override
	public void setBiobankDbId(long biobankDbId) {
		_biobankDbId = biobankDbId;
	}

	@JSON
	@Override
	public long getContactId() {
		return _contactId;
	}

	@Override
	public void setContactId(long contactId) {
		_contactId = contactId;
	}

	@Override
	public BiobankContact toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (BiobankContact)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BiobankContactImpl biobankContactImpl = new BiobankContactImpl();

		biobankContactImpl.setBiobankDbId(getBiobankDbId());
		biobankContactImpl.setContactId(getContactId());

		biobankContactImpl.resetOriginalValues();

		return biobankContactImpl;
	}

	@Override
	public int compareTo(BiobankContact biobankContact) {
		BiobankContactPK primaryKey = biobankContact.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof BiobankContact)) {
			return false;
		}

		BiobankContact biobankContact = (BiobankContact)obj;

		BiobankContactPK primaryKey = biobankContact.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<BiobankContact> toCacheModel() {
		BiobankContactCacheModel biobankContactCacheModel = new BiobankContactCacheModel();

		biobankContactCacheModel.biobankDbId = getBiobankDbId();

		biobankContactCacheModel.contactId = getContactId();

		return biobankContactCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(5);

		sb.append("{biobankDbId=");
		sb.append(getBiobankDbId());
		sb.append(", contactId=");
		sb.append(getContactId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(10);

		sb.append("<model><model-name>");
		sb.append("com.bcnet.portlet.biobank.model.BiobankContact");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>biobankDbId</column-name><column-value><![CDATA[");
		sb.append(getBiobankDbId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactId</column-name><column-value><![CDATA[");
		sb.append(getContactId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = BiobankContact.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			BiobankContact.class
		};
	private long _biobankDbId;
	private long _contactId;
	private BiobankContact _escapedModel;
}