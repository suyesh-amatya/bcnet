/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.bcnet.portlet.biobank.model.impl;

import com.bcnet.portlet.biobank.model.BiobankAttributeLists;
import com.bcnet.portlet.biobank.model.BiobankAttributeListsModel;
import com.bcnet.portlet.biobank.model.BiobankAttributeListsSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the BiobankAttributeLists service. Represents a row in the &quot;biobankattributelists&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.bcnet.portlet.biobank.model.BiobankAttributeListsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BiobankAttributeListsImpl}.
 * </p>
 *
 * @author suyama
 * @see BiobankAttributeListsImpl
 * @see com.bcnet.portlet.biobank.model.BiobankAttributeLists
 * @see com.bcnet.portlet.biobank.model.BiobankAttributeListsModel
 * @generated
 */
@JSON(strict = true)
public class BiobankAttributeListsModelImpl extends BaseModelImpl<BiobankAttributeLists>
	implements BiobankAttributeListsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a biobank attribute lists model instance should use the {@link com.bcnet.portlet.biobank.model.BiobankAttributeLists} interface instead.
	 */
	public static final String TABLE_NAME = "biobankattributelists";
	public static final Object[][] TABLE_COLUMNS = {
			{ "biobankAttributeListsId", Types.BIGINT },
			{ "biobankDbId", Types.BIGINT },
			{ "attributeListName", Types.VARCHAR },
			{ "attributeListValue", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table biobankattributelists (biobankAttributeListsId LONG not null primary key,biobankDbId LONG,attributeListName VARCHAR(75) null,attributeListValue VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table biobankattributelists";
	public static final String ORDER_BY_JPQL = " ORDER BY biobankAttributeLists.biobankDbId ASC, biobankAttributeLists.attributeListName ASC";
	public static final String ORDER_BY_SQL = " ORDER BY biobankattributelists.biobankDbId ASC, biobankattributelists.attributeListName ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.bcnet.portlet.biobank.model.BiobankAttributeLists"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.bcnet.portlet.biobank.model.BiobankAttributeLists"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.bcnet.portlet.biobank.model.BiobankAttributeLists"),
			true);
	public static long ATTRIBUTELISTNAME_COLUMN_BITMASK = 1L;
	public static long ATTRIBUTELISTVALUE_COLUMN_BITMASK = 2L;
	public static long BIOBANKDBID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static BiobankAttributeLists toModel(
		BiobankAttributeListsSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		BiobankAttributeLists model = new BiobankAttributeListsImpl();

		model.setBiobankAttributeListsId(soapModel.getBiobankAttributeListsId());
		model.setBiobankDbId(soapModel.getBiobankDbId());
		model.setAttributeListName(soapModel.getAttributeListName());
		model.setAttributeListValue(soapModel.getAttributeListValue());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<BiobankAttributeLists> toModels(
		BiobankAttributeListsSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<BiobankAttributeLists> models = new ArrayList<BiobankAttributeLists>(soapModels.length);

		for (BiobankAttributeListsSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.bcnet.portlet.biobank.model.BiobankAttributeLists"));

	public BiobankAttributeListsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _biobankAttributeListsId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setBiobankAttributeListsId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _biobankAttributeListsId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return BiobankAttributeLists.class;
	}

	@Override
	public String getModelClassName() {
		return BiobankAttributeLists.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("biobankAttributeListsId", getBiobankAttributeListsId());
		attributes.put("biobankDbId", getBiobankDbId());
		attributes.put("attributeListName", getAttributeListName());
		attributes.put("attributeListValue", getAttributeListValue());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long biobankAttributeListsId = (Long)attributes.get(
				"biobankAttributeListsId");

		if (biobankAttributeListsId != null) {
			setBiobankAttributeListsId(biobankAttributeListsId);
		}

		Long biobankDbId = (Long)attributes.get("biobankDbId");

		if (biobankDbId != null) {
			setBiobankDbId(biobankDbId);
		}

		String attributeListName = (String)attributes.get("attributeListName");

		if (attributeListName != null) {
			setAttributeListName(attributeListName);
		}

		String attributeListValue = (String)attributes.get("attributeListValue");

		if (attributeListValue != null) {
			setAttributeListValue(attributeListValue);
		}
	}

	@JSON
	@Override
	public long getBiobankAttributeListsId() {
		return _biobankAttributeListsId;
	}

	@Override
	public void setBiobankAttributeListsId(long biobankAttributeListsId) {
		_biobankAttributeListsId = biobankAttributeListsId;
	}

	@JSON
	@Override
	public long getBiobankDbId() {
		return _biobankDbId;
	}

	@Override
	public void setBiobankDbId(long biobankDbId) {
		_columnBitmask = -1L;

		if (!_setOriginalBiobankDbId) {
			_setOriginalBiobankDbId = true;

			_originalBiobankDbId = _biobankDbId;
		}

		_biobankDbId = biobankDbId;
	}

	public long getOriginalBiobankDbId() {
		return _originalBiobankDbId;
	}

	@JSON
	@Override
	public String getAttributeListName() {
		if (_attributeListName == null) {
			return StringPool.BLANK;
		}
		else {
			return _attributeListName;
		}
	}

	@Override
	public void setAttributeListName(String attributeListName) {
		_columnBitmask = -1L;

		if (_originalAttributeListName == null) {
			_originalAttributeListName = _attributeListName;
		}

		_attributeListName = attributeListName;
	}

	public String getOriginalAttributeListName() {
		return GetterUtil.getString(_originalAttributeListName);
	}

	@JSON
	@Override
	public String getAttributeListValue() {
		if (_attributeListValue == null) {
			return StringPool.BLANK;
		}
		else {
			return _attributeListValue;
		}
	}

	@Override
	public void setAttributeListValue(String attributeListValue) {
		_columnBitmask |= ATTRIBUTELISTVALUE_COLUMN_BITMASK;

		if (_originalAttributeListValue == null) {
			_originalAttributeListValue = _attributeListValue;
		}

		_attributeListValue = attributeListValue;
	}

	public String getOriginalAttributeListValue() {
		return GetterUtil.getString(_originalAttributeListValue);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			BiobankAttributeLists.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public BiobankAttributeLists toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (BiobankAttributeLists)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BiobankAttributeListsImpl biobankAttributeListsImpl = new BiobankAttributeListsImpl();

		biobankAttributeListsImpl.setBiobankAttributeListsId(getBiobankAttributeListsId());
		biobankAttributeListsImpl.setBiobankDbId(getBiobankDbId());
		biobankAttributeListsImpl.setAttributeListName(getAttributeListName());
		biobankAttributeListsImpl.setAttributeListValue(getAttributeListValue());

		biobankAttributeListsImpl.resetOriginalValues();

		return biobankAttributeListsImpl;
	}

	@Override
	public int compareTo(BiobankAttributeLists biobankAttributeLists) {
		int value = 0;

		if (getBiobankDbId() < biobankAttributeLists.getBiobankDbId()) {
			value = -1;
		}
		else if (getBiobankDbId() > biobankAttributeLists.getBiobankDbId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		value = getAttributeListName()
					.compareTo(biobankAttributeLists.getAttributeListName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof BiobankAttributeLists)) {
			return false;
		}

		BiobankAttributeLists biobankAttributeLists = (BiobankAttributeLists)obj;

		long primaryKey = biobankAttributeLists.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		BiobankAttributeListsModelImpl biobankAttributeListsModelImpl = this;

		biobankAttributeListsModelImpl._originalBiobankDbId = biobankAttributeListsModelImpl._biobankDbId;

		biobankAttributeListsModelImpl._setOriginalBiobankDbId = false;

		biobankAttributeListsModelImpl._originalAttributeListName = biobankAttributeListsModelImpl._attributeListName;

		biobankAttributeListsModelImpl._originalAttributeListValue = biobankAttributeListsModelImpl._attributeListValue;

		biobankAttributeListsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<BiobankAttributeLists> toCacheModel() {
		BiobankAttributeListsCacheModel biobankAttributeListsCacheModel = new BiobankAttributeListsCacheModel();

		biobankAttributeListsCacheModel.biobankAttributeListsId = getBiobankAttributeListsId();

		biobankAttributeListsCacheModel.biobankDbId = getBiobankDbId();

		biobankAttributeListsCacheModel.attributeListName = getAttributeListName();

		String attributeListName = biobankAttributeListsCacheModel.attributeListName;

		if ((attributeListName != null) && (attributeListName.length() == 0)) {
			biobankAttributeListsCacheModel.attributeListName = null;
		}

		biobankAttributeListsCacheModel.attributeListValue = getAttributeListValue();

		String attributeListValue = biobankAttributeListsCacheModel.attributeListValue;

		if ((attributeListValue != null) && (attributeListValue.length() == 0)) {
			biobankAttributeListsCacheModel.attributeListValue = null;
		}

		return biobankAttributeListsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{biobankAttributeListsId=");
		sb.append(getBiobankAttributeListsId());
		sb.append(", biobankDbId=");
		sb.append(getBiobankDbId());
		sb.append(", attributeListName=");
		sb.append(getAttributeListName());
		sb.append(", attributeListValue=");
		sb.append(getAttributeListValue());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.bcnet.portlet.biobank.model.BiobankAttributeLists");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>biobankAttributeListsId</column-name><column-value><![CDATA[");
		sb.append(getBiobankAttributeListsId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>biobankDbId</column-name><column-value><![CDATA[");
		sb.append(getBiobankDbId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>attributeListName</column-name><column-value><![CDATA[");
		sb.append(getAttributeListName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>attributeListValue</column-name><column-value><![CDATA[");
		sb.append(getAttributeListValue());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = BiobankAttributeLists.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			BiobankAttributeLists.class
		};
	private long _biobankAttributeListsId;
	private long _biobankDbId;
	private long _originalBiobankDbId;
	private boolean _setOriginalBiobankDbId;
	private String _attributeListName;
	private String _originalAttributeListName;
	private String _attributeListValue;
	private String _originalAttributeListValue;
	private long _columnBitmask;
	private BiobankAttributeLists _escapedModel;
}